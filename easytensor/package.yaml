name:                easytensor
version:             2.1.0.0
github:              "achirkin/easytensor/easytensor"
license:             BSD3
author:              "Artem Chirkin"
maintainer:          "achirkin@users.noreply.github.com"
copyright:           "Copyright: (c) 2019 Artem Chirkin"
synopsis:            Pure, type-indexed haskell vector, matrix, and tensor library.
category:            math, geometry
description:
    Pure, type-indexed haskell vector, matrix, and tensor library.
    Features dimensionality type-checking for all operations.
    Generic n-dimensional versions are implemented using low-level prim ops.
    Allows ad-hoc replacement with fixed low-dimensionality vectors and matrices without changing user interface.
    Please see the README on GitHub at <https://github.com/achirkin/easytensor#readme>

flags:

  unsafeindices:
    description:
      Disable bound checks when accessing elements of a tensor, matrix, or vector.
    default: false
    manual: true


ghc-options:
  - -Wall
  - -Wcompat
  - -Wtabs
  - -Wmonomorphism-restriction
  - -Wmissing-local-signatures
  - -Wmissing-home-modules
  - -Widentities
  - -Wredundant-constraints

dependencies:
  - base >= 4.11 && < 5
  - dimensions >= 2 && < 3
  - constraints-deriving >= 1.0.4.0 && < 2

library:
  source-dirs:
  - src
  - src-base
  other-modules:
  - Numeric.Matrix.Internal
  - Numeric.Matrix.Internal.Double
  - Numeric.Matrix.Internal.Float
  - Numeric.Scalar.Internal
  - Numeric.Vector.Internal
  - Numeric.Quaternion.Internal
  - Numeric.Quaternion.Internal.QDouble
  - Numeric.Quaternion.Internal.QFloat
  - Numeric.DataFrame.Internal.Backend.Family
  - Numeric.DataFrame.Internal.Backend.Family.ArrayBase
  - Numeric.DataFrame.Internal.Backend.Family.DoubleX2
  - Numeric.DataFrame.Internal.Backend.Family.DoubleX3
  - Numeric.DataFrame.Internal.Backend.Family.DoubleX4
  - Numeric.DataFrame.Internal.Backend.Family.FloatX2
  - Numeric.DataFrame.Internal.Backend.Family.FloatX3
  - Numeric.DataFrame.Internal.Backend.Family.FloatX4
  - Numeric.DataFrame.Internal.Backend.Family.ScalarBase
  - Numeric.DataFrame.Internal.BackendI
  when:
  - condition: flag(unsafeindices)
    cpp-options: -DUNSAFE_INDICES

tests:

  et-test:
    main:                Spec.hs
    source-dirs:         test
    dependencies:
    - Cabal
    - QuickCheck
    - template-haskell
    - easytensor


benchmarks:

  et-bench-misc:
    main:                misc.hs
    source-dirs:         bench
    dependencies:
    - easytensor

  et-bench-spfolds:
    main:                subspacefolds.hs
    source-dirs:         bench
    dependencies:
    - time
    - easytensor
